class Solution {
public:
    bool check(const string &a, const string &b) {
        if (a.length() > b.length()) {
            return false;
        }
        for (int i = 0; i < a.length(); i++) {
            if (a[i] != b[i]) {
                return false;
            }
        }
        return true;
    }
    int minimumLengthEncoding(vector<string>& words) {
        for (string &word : words) {
            reverse(word.begin(), word.end());
        }
        sort(words.begin(), words.end());
        vector<bool> is_sub(words.size());
        for (int i = 0; i < words.size() - 1; i++) {
            is_sub[i] = check(words[i], words[i + 1]);
        }
        int res = 0;
        for (int i = 0; i < words.size(); i++) {
            if (!is_sub[i]) {
                res += words[i].length() + 1;
            }
        }
        return res;
    }
};
